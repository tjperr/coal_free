AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  my_first_sam

  Sample SAM Template for my_first_sam

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
#Globals:

Parameters:
  Key:
    Type: String
    Description: BMRS API key
    Default: default value

Resources:
  DataCaptureFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: datacapture/
      Handler: app.lambda_handler
      Runtime: python3.7
      Timeout: 45
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref DataStore
      Environment:
        Variables:
          bucket_name: !Ref DataStore
          bmrs_key: !Ref Key
      Events:
        DataCapture:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /datacapture
            Method: get
        DailyRun:
          Type: Schedule
          Properties:
            Schedule: cron(0 19 * * ? *)
            Enabled: True

  # DataReadFunction:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     CodeUri: dataread/
  #     Handler: app.lambda_handler
  #     Runtime: python3.7
  #     Timeout: 10
  #     Policies:
  #       - DynamoDBReadPolicy:
  #           TableName: !Ref Database
  #     Environment:
  #       Variables:
  #         DYNAMODB_NAME: !Ref Database

  #     Events:
  #       DataCapture:
  #         Type: Api
  #         Properties:
  #           Path: /dataread
  #           Method: get

  DataStore:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

  Site:
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: PublicRead
      MetricsConfigurations:
        - Id: EntireBucket
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
    DeletionPolicy: Retain

  SiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref Site
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - "s3:GetObject"
            Effect: Allow
            Resource: !Join
              - ""
              - - "arn:aws:s3:::"
                - !Ref Site
                - /*
            Principal: "*"

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  DataCaptureApi:
    Description: "API Gateway endpoint URL for Prod stage data capture function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/datacapture/"
  DataCaptureFunction:
    Description: "Data capture Lambda Function ARN"
    Value: !GetAtt DataCaptureFunction.Arn
  DataCaptureFunctionIamRole:
    Description: "Implicit IAM Role created for data capture function"
    Value: !GetAtt DataCaptureFunctionRole.Arn
  WebsiteURL:
    Value: !GetAtt
      - Site
      - WebsiteURL
    Description: URL for website hosted on S3
  S3BucketSecureURL:
    Value: !Join
      - ""
      - - "https://"
        - !GetAtt
          - Site
          - DomainName
    Description: Name of S3 bucket to hold website content
